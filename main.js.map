{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/cards.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const initialCards = [\r\n  {\r\n    name: \"Архыз\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n  },\r\n  {\r\n    name: \"Челябинская область\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n  },\r\n  {\r\n    name: \"Иваново\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n  },\r\n  {\r\n    name: \"Камчатка\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n  },\r\n  {\r\n    name: \"Холмогорский район\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n  },\r\n  {\r\n    name: \"Байкал\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n  },\r\n];\r\n","const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-38\",\r\n  headers: {\r\n    authorization: \"1202c0fe-b632-4e71-b016-b1578f359fd6\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n// Функция обработки ответа\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const editUserInfo = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, about }),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const addNewCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, link }),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const deleteCardFromApi = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const updateAvatar = (link) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar: link }),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const putLikeOnCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const deleteLikeFromCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(handleResponse);\r\n};\r\n","import { putLikeOnCard, deleteLikeFromCard } from \"./api.js\";\r\n\r\n// Функция создания карточки\r\n\r\nexport const cardTemplate = document.querySelector(\"#card-template\");\r\n\r\nexport function createCard(\r\n  cardData,\r\n  deleteCard,\r\n  toggleLike,\r\n  handleCardClick,\r\n  openDeletePopup,\r\n  userId\r\n) {\r\n  const cardElement = cardTemplate.content\r\n    .querySelector(\".card\")\r\n    .cloneNode(true);\r\n\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const cardButtonDelete = cardElement.querySelector(\".card__delete-button\");\r\n  const cardButtonLike = cardElement.querySelector(\".card__like-button\");\r\n  const likeCountElement = cardElement.querySelector(\".card__like-count\");\r\n\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardTitle.textContent = cardData.name;\r\n\r\n  cardData.element = cardElement;\r\n\r\n  // Показываем кнопку удаления только если карточка создана пользователем\r\n  if (cardData.owner._id === userId) {\r\n    cardButtonDelete.style.display = \"block\";\r\n    cardButtonDelete.addEventListener(\"click\", () => openDeletePopup(cardData));\r\n  } else {\r\n    cardButtonDelete.style.display = \"none\";\r\n  }\r\n\r\n  cardButtonLike.addEventListener(\"click\", () =>\r\n    toggleLike(cardData, cardButtonLike, likeCountElement)\r\n  );\r\n  cardImage.addEventListener(\"click\", () =>\r\n    handleCardClick(cardData.name, cardData.link)\r\n  );\r\n\r\n  // Устанавливаем количество лайков\r\n  likeCountElement.textContent = cardData.likes.length;\r\n\r\n  // Проверяем, лайкал ли пользователь карточку\r\n  const isLikedByUser = cardData.likes.some((like) => like._id === userId);\r\n  if (isLikedByUser) {\r\n    cardButtonLike.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  return cardElement;\r\n}\r\n\r\n// Функция удаления карточки\r\nexport function deleteCard(card) {\r\n  if (card && card.remove) {\r\n    card.remove();\r\n  }\r\n}\r\n\r\n// Кнопка лайка\r\nexport function toggleLike(cardData, button, likeCountElement) {\r\n  const isLiked = button.classList.contains(\"card__like-button_is-active\");\r\n\r\n  if (isLiked) {\r\n    deleteLikeFromCard(cardData._id)\r\n      .then((updatedCardData) => {\r\n        button.classList.remove(\"card__like-button_is-active\");\r\n        cardData.likes = updatedCardData.likes;\r\n        likeCountElement.textContent = cardData.likes.length;\r\n      })\r\n      .catch((err) => console.error(err));\r\n  } else {\r\n    putLikeOnCard(cardData._id)\r\n      .then((updatedCardData) => {\r\n        button.classList.add(\"card__like-button_is-active\");\r\n        cardData.likes = updatedCardData.likes;\r\n        likeCountElement.textContent = cardData.likes.length;\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n}\r\n","// Функция открытия попапа\r\nexport function openModal(popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", escClose);\r\n  popup.addEventListener(\"mousedown\", overlayClose);\r\n}\r\n\r\n// Функция закрытия попапа\r\nexport function closeModal(popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", escClose);\r\n  popup.removeEventListener(\"mousedown\", overlayClose);\r\n}\r\n\r\n// Обработка закрытия по ESC\r\nexport function escClose(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector(\".popup_is-opened\");\r\n    if (openedPopup) {\r\n      closeModal(openedPopup);\r\n    }\r\n  }\r\n}\r\n\r\nexport function overlayClose(evt) {\r\n  if (evt.target.classList.contains(\"popup\")) {\r\n    closeModal(evt.target);\r\n  }\r\n}\r\n","//Показываем сообщение об ошибке и добавляет стили ошибки\r\nfunction showInputError(form, input, errorMessage, config) {\r\n  const errorElement = form.querySelector(`#${input.name}-error`);\r\n  input.classList.add(config.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n}\r\n\r\n//Убираем сообщение об ошибке и убираем стили ошибки\r\nfunction hideInputError(form, input, config) {\r\n  const errorElement = form.querySelector(`#${input.name}-error`);\r\n  input.classList.remove(config.inputErrorClass);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.remove(config.errorClass);\r\n}\r\n\r\n// Проверяем валидность введённых данных в поле\r\nfunction checkInputValidity(form, input, config) {\r\n  const pattern = /^[a-zA-Zа-яА-ЯёЁ\\s-]+$/;\r\n\r\n  if (!input.validity.valid) {\r\n    if (input.validity.tooShort) {\r\n      showInputError(\r\n        form,\r\n        input,\r\n        `Минимальное количество символов: ${input.minLength}. Длина текста сейчас: ${input.value.length}.`,\r\n        config\r\n      );\r\n    } else if (input.value !== \"\" && !pattern.test(input.value)) {\r\n      showInputError(\r\n        form,\r\n        input,\r\n        input.dataset.errorMessage ||\r\n          \"Разрешены только латинские, кириллические буквы, знаки дефиса и пробелы\",\r\n        config\r\n      );\r\n    } else {\r\n      showInputError(form, input, input.validationMessage, config);\r\n    }\r\n  } else {\r\n    hideInputError(form, input, config);\r\n  }\r\n}\r\n\r\n// Функция вкл/выкл кнопки в зависимости от валидности заполненных полей формы\r\nfunction toggleButtonState(form, config) {\r\n  const button = form.querySelector(config.submitButtonSelector);\r\n  const inputs = Array.from(form.querySelectorAll(config.inputSelector));\r\n  const isValid = inputs.every((input) => input.validity.valid);\r\n\r\n  if (isValid) {\r\n    button.disabled = false;\r\n    button.classList.remove(config.inactiveButtonClass);\r\n  } else {\r\n    button.disabled = true;\r\n    button.classList.add(config.inactiveButtonClass);\r\n  }\r\n}\r\n\r\n// Устанавливаем обработчики событий инпут для всех полей формы\r\nfunction setValidationListeners(form, config) {\r\n  const inputs = Array.from(form.querySelectorAll(config.inputSelector));\r\n\r\n  inputs.forEach((input) => {\r\n    input.addEventListener(\"input\", () => {\r\n      checkInputValidity(form, input, config);\r\n      toggleButtonState(form, config);\r\n    });\r\n  });\r\n}\r\n\r\n// Включаем валидацию для всех форм на странице\r\nexport function enableValidation(config) {\r\n  const forms = document.querySelectorAll(config.formSelector);\r\n\r\n  forms.forEach((form) => {\r\n    form.addEventListener(\"submit\", (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n\r\n    setValidationListeners(form, config);\r\n    toggleButtonState(form, config);\r\n  });\r\n}\r\n\r\n// Очищаем ошибки валидации и обновляем состояние кнопки\r\nexport function clearValidation(form, config) {\r\n  const inputs = Array.from(form.querySelectorAll(config.inputSelector));\r\n  inputs.forEach((input) => hideInputError(form, input, config));\r\n\r\n  toggleButtonState(form, config);\r\n}\r\n","import \"./pages/index.css\";\r\nimport { initialCards } from \"./scripts/cards.js\";\r\n\r\nimport {\r\n  cardTemplate,\r\n  createCard,\r\n  deleteCard,\r\n  toggleLike,\r\n} from \"./scripts/card.js\";\r\n\r\nimport {\r\n  openModal,\r\n  closeModal,\r\n  escClose,\r\n  overlayClose,\r\n} from \"./scripts/modal.js\";\r\n\r\nimport { enableValidation, clearValidation } from \"./scripts/validation.js\";\r\n\r\nimport {\r\n  getUserInfo,\r\n  getInitialCards,\r\n  editUserInfo,\r\n  addNewCard,\r\n  deleteCardFromApi,\r\n  updateAvatar,\r\n} from \"./scripts/api.js\";\r\n\r\n// Список карточек\r\nconst placesList = document.querySelector(\".places__list\");\r\n\r\nconst profileAvatar = document.querySelector(\".profile__image\");\r\n\r\n// Переменные для модального окна редактирования профидя\r\nconst modalEdit = document.querySelector(\".popup_type_edit\");\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst buttonOpenPopupEdit = document.querySelector(\".profile__edit-button\");\r\nconst buttonClosePopupEdit = modalEdit.querySelector(\".popup__close\");\r\nconst formPopupEdit = modalEdit.querySelector(\"form\");\r\nconst nameInput = formPopupEdit.querySelector(\".popup__input_type_name\");\r\nconst jobInput = formPopupEdit.querySelector(\".popup__input_type_description\");\r\nconst profileForm = modalEdit.querySelector(\".popup__form\");\r\n\r\n// Переменные для формы добавления карточек\r\n\r\nconst modalCard = document.querySelector(\".popup_type_new-card\");\r\nconst buttonOpenPopupNewCard = document.querySelector(\".profile__add-button\");\r\nconst buttonClosePopupNewCard = modalCard.querySelector(\".popup__close\");\r\nconst formAddCard = modalCard.querySelector(\"form\");\r\nconst inputName = formAddCard.querySelector(\".popup__input_type_card-name\");\r\nconst inputLink = formAddCard.querySelector(\".popup__input_type_url\");\r\n\r\n// Переменные для попапа с изображениями\r\n\r\nconst modalImage = document.querySelector(\".popup_type_image\");\r\nconst popupImage = modalImage.querySelector(\".popup__image\");\r\nconst popupCaptionImage = modalImage.querySelector(\".popup__caption\");\r\n\r\n// Переменные для обновления аватара\r\nconst avatarEditButton = document.querySelector(\".profile__image-edit-button\");\r\nconst avatarPopup = document.querySelector(\".popup_type_avatar-edit\");\r\nconst avatarForm = avatarPopup.querySelector(\".popup__form\");\r\nconst avatarInput = avatarForm.avatar;\r\nconst avatarimage = document.querySelector(\".profile__avatar\");\r\nconst buttonClosePopupAvatar = avatarPopup.querySelector(\".popup__close\");\r\n\r\n// Переменные для попапа удаления карточки\r\nconst modalDelete = document.querySelector(\".popup_type__card-delete\");\r\nconst buttonClosePopupDelete = modalDelete.querySelector(\r\n  \".popup__close_card-delete\"\r\n);\r\nconst buttonDeleteCard = modalDelete.querySelector(\r\n  \".popup__button_card-delete\"\r\n);\r\nlet currentCardId = null;\r\n\r\n// Настройки валидации формы\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\n// Функция открытия попапа карточки с изображением\r\n\r\nfunction handleCardClick(name, link) {\r\n  popupImage.src = link;\r\n  popupImage.alt = name;\r\n  popupCaptionImage.textContent = name;\r\n  modalImage.style.backgroundColor = \"rgba(0, 0, 0, 0.9)\";\r\n  openModal(modalImage);\r\n}\r\n\r\n// // Открытие попапа удаления\r\nfunction openDeletePopup(cardData) {\r\n  openModal(modalDelete);\r\n\r\n  const onDelete = () => {\r\n    deleteCardFromApi(cardData._id)\r\n      .then(() => {\r\n        deleteCard(cardData.element);\r\n        closeModal(modalDelete);\r\n      })\r\n      .catch((err) => console.error(err))\r\n      .finally(() => {\r\n        buttonDeleteCard.removeEventListener(\"click\", onDelete);\r\n      });\r\n  };\r\n\r\n  buttonDeleteCard.addEventListener(\"click\", onDelete);\r\n}\r\n\r\nfunction renderLoading(isLoading, buttonElement, defaultText = \"Сохранить\") {\r\n  buttonElement.textContent = isLoading ? \"Сохранение...\" : defaultText;\r\n}\r\n\r\n// // Закрытие попапа удаления карточки\r\nbuttonClosePopupDelete.addEventListener(\"click\", () => closeModal(modalDelete));\r\n\r\nmodalDelete.addEventListener(\"click\", (evt) => {\r\n  if (evt.target === modalDelete) {\r\n    closeModal(modalDelete);\r\n  }\r\n});\r\n\r\n// Вызов функции загрузки и отображения данных пользователя\r\nlet userId;\r\n\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n  .then(([userData, cards]) => {\r\n    console.log(userData);\r\n    console.log(cards);\r\n    userId = userData._id;\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\r\n\r\n    cards.reverse().forEach((card) => {\r\n      const cardElement = createCard(\r\n        card,\r\n        deleteCard,\r\n        toggleLike,\r\n        handleCardClick,\r\n        openDeletePopup,\r\n        userId\r\n      );\r\n      placesList.append(cardElement);\r\n    });\r\n  })\r\n  .catch((err) => console.error(err));\r\n\r\n// Редактирование профиля\r\n\r\nbuttonOpenPopupEdit.addEventListener(\"click\", () => {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  clearValidation(profileForm, validationConfig);\r\n  openModal(modalEdit);\r\n});\r\n\r\nbuttonClosePopupEdit.addEventListener(\"click\", () => closeModal(modalEdit));\r\n\r\nmodalEdit.addEventListener(\"click\", (evt) => {\r\n  if (evt.target === modalEdit) {\r\n    closeModal(modalEdit);\r\n  }\r\n});\r\n\r\n// Обработчик отправки формы редактирования профиля\r\nformPopupEdit.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formPopupEdit.querySelector(\".popup__button\"));\r\n\r\n  const newName = nameInput.value;\r\n  const newJob = jobInput.value;\r\n\r\n  editUserInfo(newName, newJob)\r\n    .then((editedUser) => {\r\n      profileTitle.textContent = editedUser.name;\r\n      profileDescription.textContent = editedUser.about;\r\n      closeModal(modalEdit);\r\n    })\r\n    .catch((err) => console.error(err))\r\n    .finally(() => {\r\n      renderLoading(false, formPopupEdit.querySelector(\".popup__button\"));\r\n    });\r\n});\r\n\r\n// Добавление новой карточки\r\n\r\nbuttonOpenPopupNewCard.addEventListener(\"click\", () => {\r\n  formAddCard.reset();\r\n  clearValidation(formAddCard, validationConfig);\r\n  openModal(modalCard);\r\n});\r\nbuttonClosePopupNewCard.addEventListener(\"click\", () => closeModal(modalCard));\r\n\r\nformAddCard.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formAddCard.querySelector(\".popup__button\"));\r\n\r\n  const name = inputName.value;\r\n  const link = inputLink.value;\r\n\r\n  addNewCard(name, link)\r\n    .then((newCardData) => {\r\n      const newCardElement = createCard(\r\n        newCardData,\r\n        deleteCard,\r\n        toggleLike,\r\n        handleCardClick,\r\n        openDeletePopup,\r\n        userId\r\n      );\r\n      placesList.prepend(newCardElement);\r\n      formAddCard.reset();\r\n      closeModal(modalCard);\r\n    })\r\n    .catch((err) => console.error(err))\r\n    .finally(() => {\r\n      renderLoading(false, formAddCard.querySelector(\".popup__button\"));\r\n    });\r\n});\r\n\r\n// Попап с изображением\r\n\r\nmodalImage.addEventListener(\"click\", (evt) => {\r\n  if (\r\n    evt.target === modalImage ||\r\n    evt.target.classList.contains(\"popup__close\")\r\n  ) {\r\n    modalImage.style.backgroundColor = \"rgba(0, 0, 0, 0.5)\";\r\n    closeModal(modalImage);\r\n  }\r\n});\r\n\r\n// Открытие попа обновления аватара\r\navatarEditButton.addEventListener(\"click\", () => {\r\n  avatarInput.value = \"\";\r\n  openModal(avatarPopup);\r\n});\r\n\r\nbuttonClosePopupAvatar.addEventListener(\"click\", () => {\r\n  closeModal(avatarPopup);\r\n});\r\n\r\n// Отправка формы с обновлением аватара\r\navatarForm.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  renderLoading(true, avatarForm.querySelector(\".popup__button\"));\r\n  const avatarLink = avatarInput.value;\r\n\r\n  updateAvatar(avatarLink)\r\n    .then((res) => {\r\n      avatarImage.src = res.avatar;\r\n      closeModal(avatarPopup);\r\n    })\r\n    .catch((err) => console.error(err))\r\n    .finally(() => {\r\n      renderLoading(false, avatarForm.querySelector(\".popup__button\"));\r\n    });\r\n});\r\n\r\n// Включение валидации всех форм\r\nenableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","createCard","cardData","deleteCard","toggleLike","handleCardClick","openDeletePopup","userId","cardElement","content","cloneNode","cardImage","cardTitle","cardButtonDelete","cardButtonLike","likeCountElement","src","link","alt","name","textContent","element","owner","_id","style","display","addEventListener","likes","length","some","like","classList","add","button","cardId","contains","fetch","method","then","updatedCardData","remove","catch","err","console","error","putLikeOnCard","openModal","popup","escClose","overlayClose","closeModal","removeEventListener","evt","key","openedPopup","target","showInputError","form","input","errorMessage","errorElement","inputErrorClass","errorClass","hideInputError","toggleButtonState","submitButtonSelector","Array","from","querySelectorAll","inputSelector","every","validity","valid","disabled","inactiveButtonClass","clearValidation","forEach","placesList","profileAvatar","modalEdit","profileTitle","profileDescription","buttonOpenPopupEdit","buttonClosePopupEdit","formPopupEdit","nameInput","jobInput","profileForm","modalCard","buttonOpenPopupNewCard","buttonClosePopupNewCard","formAddCard","inputName","inputLink","modalImage","popupImage","popupCaptionImage","avatarEditButton","avatarPopup","avatarForm","avatarInput","avatar","buttonClosePopupAvatar","modalDelete","buttonClosePopupDelete","buttonDeleteCard","validationConfig","formSelector","backgroundColor","onDelete","card","finally","renderLoading","isLoading","buttonElement","defaultText","arguments","undefined","all","_ref","_ref2","userData","cards","log","about","backgroundImage","reverse","append","value","preventDefault","body","JSON","stringify","editedUser","reset","newCardData","newCardElement","prepend","e","avatarImage","tooShort","minLength","test","validationMessage","dataset","checkInputValidity","setValidationListeners","enableValidation"],"sourceRoot":""}